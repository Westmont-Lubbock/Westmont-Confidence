import tkinter as tk
from tkinter import font
import time
import threading
from flask import Flask, render_template_string

app = Flask(__name__)

class InfoClockApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Clock Display")

        # Create the clock label
        self.clock_label = tk.Label(root, font=('Helvetica', 48), fg='white', bg='black')
        self.clock_label.pack(pady=20)

        # Create the info slide label (hidden by default)
        self.info_label = tk.Label(root, font=('Helvetica', 24), fg='black', bg='yellow')

        # Start updating the clock
        self.update_clock()

    def update_clock(self):
        # Get the current time and update the clock label
        current_time = time.strftime('%H:%M:%S')
        self.clock_label.config(text=current_time)
        # Call this method again after 1000ms (1 second)
        self.root.after(1000, self.update_clock)

    def show_slide(self, slide):
        # Show the selected info slide
        self.info_label.config(text=slide)
        self.info_label.pack(pady=20, fill='x')

# Create the main display window
root = tk.Tk()
display_app = InfoClockApp(root)

def start_tkinter():
    root.mainloop()

# Start Tkinter in a separate thread so it doesn't block the Flask server
threading.Thread(target=start_tkinter, daemon=True).start()

@app.route('/')
def index():
    return render_template_string('''
        <h1>Control Panel</h1>
        <button onclick="location.href='/show_slide/1'">Show Info 1</button><br><br>
        <button onclick="location.href='/show_slide/2'">Show Info 2</button><br><br>
        <button onclick="location.href='/show_slide/3'">Show Info 3</button><br><br>
        <button onclick="location.href='/show_slide/4'">Show Info 4</button><br><br>
        <button onclick="location.href='/show_slide/5'">Show Info 5</button>
    ''')

@app.route('/show_slide/<int:slide_id>')
def show_slide(slide_id):
    slides = [
        "Please turn on your microphone.",
        "Ensure your camera is positioned correctly.",
        "Mute yourself when not speaking.",
        "Prepare your presentation materials.",
        "Check your internet connection."
    ]
    if 1 <= slide_id <= 5:
        display_app.show_slide(slides[slide_id - 1])
    return f"Slide {slide_id} displayed", 200

if __name__ == "__main__":
    # Run the Flask server, accessible on your local network
    app.run(host='0.0.0.0', port=5000)
